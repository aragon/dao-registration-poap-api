---
name: api-build-dev

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      #- test
  #   tags:
  #     - "v[0-9]+.[0-9]+.[0-9]+"
  # pull_request:
  #   branches:
  #     - main
    paths-ignore:
      - 'README.md'
      - 'Dockerfile*'
      - '.env*'
      - '.vscode'
      - '.dockerignore'
      - 'docker.env'
      # - '.github/**'

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    # outputs:
    #   ENVVAR_TAG_VALUE: ${{ steps.vars1.outputs.TAG_VALUE }}
    steps:
      # - name: Get Github vars
      #   id: vars1
      #   run: |
      #     echo "TAG_VALUE=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT

      - name: Checkout code
        uses: actions/checkout@v3
        # with:
        #   ref: ${{ steps.vars1.outputs.TAG_VALUE }}

      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: "npm"

      - name: Install dependencies
        run: npm install

      - name: Run e2e tests
        if: github.ref == 'refs/heads/test'
        run: npm run test:e2e

  docker-release:
    runs-on: ubuntu-latest
    needs:
      - setup-and-build
    #if: contains(github.ref, 'refs/tags/dev/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # with:
        #   #ref: ${{ steps.vars1.outputs.TAG_VALUE }}
        #   ref: ${{ needs.setup-and-build.outputs.ENVVAR_TAG_VALUE }}

      - name: Get git hash and timestamp in seconds
        id: vars2
        run: |
          echo "GIT_HASH_SHORT=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "DATE_IN_SECS=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        # with:
        #   buildkitd-flags: --debug

      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          #images: ghcr.io/aragon/dao-registration-poap-api
          images: ghcr.io/${{ github.repository }}
          flavor: |
            latest=${{ github.ref == 'refs/heads/main' }}
          tags: |
            type=raw,value=commit1-{{sha}},enable=${{ github.ref_type != 'tag' }}
            type=sha,event=branch,prefix=commit2-,format=short,enable=${{ github.ref_type != 'tag' }}

      - name: Show docker tags and labels
        run: |
          echo "TAGS: ${{ steps.meta.outputs.tags }}"
          echo "LABELS: ${{ steps.meta.outputs.labels }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }} ## i.e. ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v4
        #if: github.ref == 'refs/heads/develop'
        with:
          context: .
          file: ./Dockerfile.prod
          #platforms: linux/amd64
          build-args: |
             COMMIT_SHA=${{ steps.vars2.outputs.GIT_HASH_SHORT }}
             ENVIRONMENT=development
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ghcr.io/${{ github.repository }}:develop
            ghcr.io/${{ github.repository }}:develop-${{ steps.vars2.outputs.DATE_IN_SECS }}
            ghcr.io/${{ github.repository }}:commit-hash-${{ steps.vars2.outputs.GIT_HASH_SHORT }}
          labels: ${{ steps.meta.outputs.labels }}
