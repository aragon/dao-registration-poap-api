---
name: Main CI

on:
  workflow_dispatch:
  push:
    branches:
      #- develop
      - test
    tags:
      - 'dev/v*'      ## i.e. dev/v1.23
  pull_request:
    branches:
      - main-xyz

jobs:
  setup-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Get Git tag value
        id: vars1
        run: echo "tag_value=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars1.outputs.tag_value }}     ## i.e. develop, dev/v0.2
      - name: Set up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run e2e tests
        if: github.ref == 'refs/heads/test'
        run: npm run test:e2e

  docker-release:
    runs-on: ubuntu-latest
    needs:
      - setup-and-build
    if: contains(github.ref, 'refs/tags/dev/v')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.vars1.outputs.tag_value }}
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}      ## i.e. ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/aragon/dao-registration-poap-api
          flavor: |
            #latest=${{ github.ref == 'refs/heads/main' }}
            latest=${{ startsWith(github.ref, 'refs/tags/prod/v') }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            #type=sha,event=branch,prefix={{branch}}-,format=short

      - name: Get Git short commit hash
        id: vars2
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and Push to GitHub Container Registry
        uses: docker/build-push-action@v4
        #if: github.ref == 'refs/heads/develop'
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          #push: true
          push: ${{ github.event_name != 'pull_request' }}
          build-args: |
            COMMIT_SHA=${{ steps.vars2.outputs.sha_short }}
            NODE_ENV=develop
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
